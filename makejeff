echo "make all"
#
echo "make bfq - query a gufi tree"
# linux version 
# cc bfq.c -pthread -l sqlite3 -o bfq
# mac version 
cc bfq.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o bfq
#
echo "make bfti builds a tree index"
# linux version
# cc bfti.c -pthread -l sqlite3 -o bfti
# mac version
cc bfti.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o bfti
#
echo "make bfli builds a gufi tree from a flat file (make from bfw)"
# linux version
# cc bfli.c -pthread -l sqlite3 -o bfli
# mac version
cc bfli.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o bfli
#
echo "make dbdump - dumps tree based indexes"
# linux version
#cc dbdump.c -pthread -l sqlite3 -o dbdump 
# mac version
cc dbdump.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o dbdump
#
echo "make bfi - make a gufi index from a posix fs tree"
# linux version
# cc bfi.c -pthread -l sqlite3 -o bfi
# mac version
cc bfi.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o bfi
#
echo "make dfw a handy depth first walker program"
# linux version
# cc dfw.c -o dfw
# mac version
cc dfw.c -DBSDXATTRS -o dfw
#
echo "make bfw - a bread first walker program"
# cc bfw.c -o bfw
# linux version
# mac version
#
echo "make bffuse a simple fuse that puts a ffuse file system over a gufi tree query"
# cc bffuse.c -I /usr/local/include/osxfuse -D_FILE_OFFSET_BITS=64 -I.. -L../.libs -l sqlite3 -L /usr/local/lib -l osxfuse -o bffuse 
#
# other stuff
#  cc dfwrplusdb.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o dfwrplusdb
#  cc dfwrplusdbthread.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o dfwrplusdbthread
#  cc dfwrplusdbthreadsort.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o dfwrplusdbthreadsort
#  cc rpluslistdbthreadsort.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o rpluslistdbthreadsort
#  cc dfwrplus.c -DBSDXATTRS -o dfwrplus
#  cc bfhi.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o bfhi
#  cc bfri.c -I.. -L../.libs -l sqlite3 -DBSDXATTRS -o bfri
