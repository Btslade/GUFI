# libGUFI files
LIBFILES = bf structq dbutils utils
LIB_C = $(addsuffix .c,$(LIBFILES))
LIB_O = $(addsuffix .o,$(LIBFILES))
LIB_H = $(addsuffix .h,$(LIBFILES))
LIB_A = ../lib$(LIB).a

# executables
DFW       = dfw
BFW       = bfwi bfti bfq bfwreaddirplus2db
BFW_MYSQL = bfmi.mysql
TOOLS     = querydb querydbn make_testdirs make_testtree
TARGETS   = $(addprefix ../,$(DFW) $(BFW) $(TOOLS))

all: $(TARGETS)

%.o: %.c $(LIB_H)
	echo $(STATIC_DEPS)
	$(CC) $(CFLAGS) -c -o $@ $< -pthread

# --- library

$(LIB_A): $(LIB_O)
	ar -rs $@ $^

# --- apps

../%: %.c $(LIB_A) $(STATIC_DEPS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

../%: %.cpp $(LIB_A) $(STATIC_DEPS)
	$(CXX) $(CFLAGS) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

# recursive make of the '%' part
# recursive make will catch the ifneq ($(MYSQL),) ... above
%.mysql:
	$(MAKE) -C . $* MYSQL=1

clean:
	rm -f $(LIB_O) $(LIB_A) $(TARGETS)
	rm -f *~
	rm -rf *.dSYM
	rm -rf core.*
	@ # for F in `ls *.c | sed -e 's/\.c$//'`; do [ -f $F ] && rm $F; done
	@ # final "echo" is so sub-shell will return success
	@ (for F in `ls *.c* | sed -e 's/\.c.*$$//'`; do [ -f $$F ] && (echo rm $$F; rm $$F); done; echo done > /dev/null)
