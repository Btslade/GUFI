#!/bin/bash -e

SCRIPT="$BASH_SOURCE" # Must be at the top
DIR=`dirname $SCRIPT`
BFQ=$DIR/../bfq


usage() {
    PROG=$1
    echo "Usage: $PROG <GUFI_tree>"
    exit -1
}


GUFI=$1

if (( $# != 1 )); then
    usage $0
elif [ ! -d $GUFI ]; then
    usage $0
elif [ ! -e $GUFI/db.db ]; then
    echo "$GUFI/db.db does not exist.  Need the root of a GUFI tree."
    exit -1
fi



# Usage: bfq [options] GUFI_tree
# options:
#   -h              help
#   -H              show assigned input values (debugging)
#   -T <SQL_tsum>   SQL for tree-summary table
#   -S <SQL_sum>    SQL for summary table
#   -E <SQL_ent>    SQL for entries table
#   -P              print directories as they are encountered
#   -a              AND/OR (SQL query combination)
#   -p              print file-names
#   -n <threads>    number of threads
#   -o <out_fname>  output file (one-per-thread, with thread-id suffix)
#   -d <delim>      delimiter (one char)  [use 'x' for 0x1E]
#   -O <out_DB>     output DB
#   -I <SQL_init>   SQL init
#   -F <SQL_fin>    SQL cleanup
# 
# GUFI_tree         find GUFI index-tree here
# 


echo
echo "query to screen"
$BFQ \
    -Pp -n 1\
    -E "select path(),* from entries;" \
    $GUFI

echo
echo "query to screen show date conversion (limited to 10 entries)"
$BFQ \
    -Pp -n 1 \
    -S "select path(),name,type,size,datetime(mtime,'unixepoch') from vsummarydir limit 10;" \
    -E "select path(),name, type, size, datetime(mtime,'unixepoch') from entries limit 10;" \
    $GUFI

echo
echo "query to out files"
rm -f outq*
$BFQ \
    -Pp -n 2 -o outq \
    -E "select * from entries;" \
    $GUFI

ls -l outq*
for F in `ls outq*`; do echo; echo $F; cat $F; done

echo
echo "query to screen, insert per-user size-summary into table 'sument' in outdb.<thread_no>"
rm -f outdb*
$BFQ \
    -Pp -n 2 -O outdb \
    -I "create table sument (uid int64, type text, totfiles int64, totsize int64);" \
    -E "insert into sument select uid, type, count(*), sum(size) from entries group by type;" \
    $GUFI

echo
echo "contents of table 'sument' created in previous step (thread 0)"
sqlite3 -line outdb.0 'select * from sument;'

echo
echo "contents of table 'sument' created in previous step (thread 1)"
sqlite3 -line outdb.1 'select * from sument;'

echo
echo "query to screen, insert vsummarydir recs into table 'sumsummary' in outdb.<thread_no>"
$BFQ \
    -Pp -n 2 -O outdb \
    -I "CREATE TABLE sumsummary(uid INT64, gid INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64);" \
    -S "insert into sumsummary select uid, gid, totfiles, totlinks, minuid, maxuid, mingid, maxgid, minsize, maxsize, totltk, totmtk, totltm, totmtm, totmtg, totmtt, totsize, minctime, maxctime, minmtime, maxmtime, minatime, maxatime, minblocks, maxblocks, totxattr from vsummarydir;" \
    $GUFI

echo
echo "contents of table 'sumsummary' created in previous step (thread 0)"
sqlite3 -line outdb.0 'select * from sumsummary;'

echo
echo "contents of table 'sumsummary' created in previous step (thread 1)"
sqlite3 -line outdb.1 'select * from sumsummary;'
